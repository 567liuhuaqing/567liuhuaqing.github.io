[{"content":"花指令攻克 简介 花指令（junk code）是一种专门用来迷惑反编译器的指令片段，这些指令片段不会影响程序的原有功能，但会使得反汇编器的结果出现偏差，从而使破解者分析失败。比较经典的花指令技巧有利用 jmp 、call、ret 指令改变执行流，从而使得反汇编器解析出与运行时不相符的错误代码\n铺垫 反汇编算法 线性扫描 从程序入口点开始遍历一整个代码端，逐行对命令进行反汇编\n缺点：在冯诺依曼体系结构下，无法区分数据与代码，从而导致将数据解释为指令操作码\n递归下降 从程序入口点开始读取机器码进行反汇编，通过程序控制流来确定汇编的下一条指令，遇到无条件跳转直接跳转，遇到条件跳转则从两个命令执行分支处进行解析（优先解析顺序执行分支）\n常用花指令硬编码 硬编码：汇编指令对应的机器码，通常以16进制表示\n1 2 3 4 5 6 7 8 9 10 11 addr: 汇编指令跳转的目标地址 immedn: 目的地址与当前指令下一条指令地址的距离, 是一个偏移值 nop ----\u0026gt; 90 //1字节指令,空指令 call addr ----\u0026gt; E8 immed32 //5字节指令，immed32为4字节 call far ptr addr ----\u0026gt; 9A immed48 //7字节指令，immed48为6字节 jmp short near ptr addr ----\u0026gt; EB immed8 //2字节指令,immed8为1字节 jmp near ptr addr ----\u0026gt; E9 immed32 //5字节指令 jmp far ptr addr ----\u0026gt; EA immed48 //7字节指令 loop near ptr addr ----\u0026gt; E2 immed8 //2字节指令 ret ----\u0026gt; C2 n16 //3字节指令 等价于pop n和pop eip retn ----\u0026gt; C3 //1字节指令 等价于pop eip 两大分类 可执行花指令 可执行花指令指的是花指令代码在程序的正常执行过程中会被执行，但执行这些代码没有任何意义，执行前后不改变任何寄存器的值，同时这部分代码也会被反汇编器正常识别，其目的依然是加大静态分析的难度，让你难以识别代码的真正意图，有时这种花指令可以破坏反编译的分析，使得栈指针在反编译引擎中出现异常\n压栈后恢复栈地址 1 2 3 4 _asm { push eax; add esp, 4; } call\u0026amp;ret构造 1 2 3 4 5 6 7 8 9 10 _asm { call label label: add dword ptr ss : [esp], 7;//注意变长指令 ret } real_code //特点: 可执行花指令,最终会跳转至real_code标签处执行 //call指令本质是push nextcode和jmp desAddr，ret指令本质是jmp [esp]和sub esp,4 //在ret和real_code中间可以任意插入花指令，但要根据插入字节数添加对应add值 所以也可以通过push和jmp配合实现\n1 2 3 4 5 6 7 8 9 10 11 12 13 _asm { push eax push ecx jmp label_1 label_2: mov eax,[esp] add [esp],8 jmp eax label_1: call label_2 pop eax } printf(\u0026#34;Hello world!\\n\u0026#34;); 通过压栈、退栈和跳转混淆代码，IDA将退栈指令识别为破坏堆栈平衡而报错，识别这类花指令后，将跳转和无效压栈等操作指令全部NOP掉即可\n混淆特征码 如下一些指令功能可以用替代指令完成，目的即增加反汇编分析的复杂程度：\n1 2 3 4 mov op1,op2 ----\u0026gt; push op2 / pop op1 jmp label ----\u0026gt; push label / ret call label ----\u0026gt; push label_next_instruction / push label / ret push op ----\u0026gt; sub esp,4 / mov [esp],op 永真条件跳转 可见后文\n不可执行花指令 不可执行花指令就是在程序执行过程中不会被执行，但利用静态分析算法的缺陷使反汇编分析执行会出错的垃圾数据，就会导致解析错误，这时我们需要跳过这些花指令才能保证程序正常运行\n简单e8跳转 简单的花指令0xe8是跳转指令，可以对线性扫描算法进行干扰，但是递归扫描算法可以正常分析\n1 2 3 4 5 _asm { jmp label1 _emit 0xe8 label1: } OD还是能被骗过去，但是因为ida采用的是递归扫描的办法所以能够正常识别\njz和jnz条件跳转 利用jz和jnz的互补条件跳转指令来代替jmp，两个跳转一个指向无效数据，一个指向正常数据来干扰递归扫描算法即ida不能正常识别\n1 2 3 4 5 6 7 8 _asm { jz lable2 jnz lable2 _emit 0xe8 lable2: } //特点: 不可执行花指令，无论是jz还是jnz指令，最终都跳转至label //在jnz label和label之间可以插入任意花指令 将这类花指令NOP即可，也可以将条件跳转指令换成无条件跳转jmp，此时ida反编译就不会报错，原理可分析递归下降算法\n永真条件跳转 通过设置永真或者永假的，导致程序一定会执行，由于ida反汇编会优先反汇编接下去的部分（false分支），也可以调用某些函数会返回确定值，来达到构造永真或永假条件\n1 2 3 4 5 6 7 8 9 10 11 12 13 _asm{ push ebx xor ebx,ebx test ebx,ebx jnz label1 jz label2 label1: _emit junkcode label2: pop ebx //需要恢复ebx寄存器 } //特点: 可执行花指令,有2条跳转分支,但只有一条分支为永真会被执行,另一条永假不执行 //在虚假分支处可以插入任意花指令 破坏堆栈平衡 汇编中函数如果有参数或局部变量，在调用前会对堆栈进行保护 ，在返回前要还原函数调用前的堆栈，这一过程程序在编译时会自动加上，如果反编译器检测到指令破坏了堆栈平衡，即函数返回时与调用时堆栈状态发生了变化，就会报错，可以利用这一点构造破坏堆栈平衡的花指令\n1 2 3 4 5 6 7 8 _asm { test eax,0 // 构造必然条件实现跳转，绕过破坏堆栈平衡的指令 jz label add esp,0x1 label: } printf(\u0026#34;Hello World!\\n\u0026#34;); //不可执行花指令 这类破环堆栈平衡的指令实际不会执行，但是由于IDA在反汇编分析时会分别从两个条件跳转处开始分析，因此判定堆栈不平衡导致反汇编失败，解决方法是NOP掉破坏堆栈平衡的指令\n参考 花指令总结\n逆向基础花指令\n恶意代码分析\n","date":"2025-03-12T15:19:48+08:00","permalink":"https://567liuhuaqing.github.io/p/%E8%8A%B1%E6%8C%87%E4%BB%A4%E6%94%BB%E5%85%8B/","title":"花指令攻克"},{"content":"目录\n[ 工具附件](# 工具附件)\n.py文件和.pyc文件\n[ 提取.pyc文件](# 提取.pyc文件)\npycdc反编译 pycdas查看字节码\n举个例子\n工具附件 DIE查壳工具 根据自己电脑选择win64位\n编辑\n链接：python逆向附件 提取码：1013\n.py文件和.pyc文件 ​ 首先，我们来认识一下.py文件和.pyc文件 ​ .py文件是python的源代码文件，也就是你写的源代码存放的地方。机器是无法直接读懂你写的源代码的，于是当你运行一个 Python 程序时，Python 解释器会将源代码编译成一种称为字节码的中间形式，然后将字节码存储在.pyc文件里面，当你下次再运行同样的程序时，机器会直接找到之前生成的.pyc文件进行加载。 ​ .pyc文件，是源代码经过编译后的一种中间表示形式。它无法双击直接运行，并且需要依赖特定的python环境（一个版本的python生成的pyc文件可能其他版本不能使用）所以它并不是可执行文件。它的存在仅仅是为了加快程序执行效率，避免重复编译。 这样就引来了一个问题——它不能像C一样自动生成一个可执行文件，如若要使用，则必须下载python环境并运行源代码，这样做非常依赖环境。 ​ 于是python提供了PyInstaller这个库，它可以将.py文件转为.exe文件，这样产生的.exe文件在没有Python环境时也可以直接使用。 ​ 一般的.py转成的.exe文件长这样:\n编辑\n我们可以用DIE打开看到为python语言写的\n编辑\n提取.pyc文件 ​ 第一步，将.exe转化成.pyc文件 ​ 使用工具pyinstxtractor.py提取.pyc文件 ​ 使用方法：在该pyinstxtractor.py文件所在目录打开终端，输入\n1 python pyinstxtractor.py [文件完整路径] ​ 这条指令的意思是用python解释器运行pyinstxtractor.py脚本，并把这个.exe文件作为参数传入。 ​ 输入完成后文件目录下会出现一个文件名_extracted文件夹\n编辑\n​ 打开这个文件夹，找到里面与.exe文件同名的.pyc文件\n编辑\npycdc反编译 ​ 上一步得到.pyc文件后，我们需要使用工具来查看源代码。 ​ 这里有两种方法，第一种是用pycdc反编译：将.pyc文件与pycdc放于同一个目录，打开终端，输入\n1 pycdas(.exe) [文件名] #括号内的部分可省略 ​ 这个指令就是把文件当参数传入，然后运行pycdc.exe，它就会把字节码反编译为源码。 ​ 但这个工具有时候不能反编译出所有的代码，这时我们就要用到另一种工具：pycdas\npycdas查看字节码 ​ 当pycdc反编译不完全时，就需要使用pycdas。 ​ .pyc文件是二进制文件，无法直接打开查看内容，而pycdas则可以帮助我们查看.pyc文件里面的字节码。 ​ 使用方法与pycdc相同：将.pyc文件与pycdas放于同一目录，然后打开终端，输入\n1 pycdas(.exe) [文件名] #括号内的部分可省略 ​ 相应工具以上传至文章顶部\n举个例子 将题目附件拖进DIE查壳，可发现为python可执行文件\n编辑\n在pyinstxtractor.py文件所在目录打开终端，输入\n1 python pyinstxtractor.py [文件完整路径] 提取.pyc文件，出现以下界面\n编辑\n在文件目录下出现test.exe_extracted文件夹\n编辑\n在这个文件夹里面找到与.exe文件同名的.pyc文件\n编辑\n将改.pyc文件与pycdc放于同一个目录，打开终端，输入\n1 pycdc test.exe 可以看到python源码\n编辑\n易知为base64解密，可以写脚本，也可以用工具\n编辑\n得到flag{Reverse_python}\n备注例题也以上传\n","date":"2025-02-27T22:50:04+08:00","permalink":"https://567liuhuaqing.github.io/p/python_rev/","title":"Python_Rev"},{"content":"目录\n[ 工具附件](# 工具附件)\n.py文件和.pyc文件\n[ 提取.pyc文件](# 提取.pyc文件)\npycdc反编译 pycdas查看字节码\n举个例子\n工具附件 DIE查壳工具 根据自己电脑选择win64位\n编辑\n链接：python逆向附件 提取码：1013\n.py文件和.pyc文件 ​ 首先，我们来认识一下.py文件和.pyc文件 ​ .py文件是python的源代码文件，也就是你写的源代码存放的地方。机器是无法直接读懂你写的源代码的，于是当你运行一个 Python 程序时，Python 解释器会将源代码编译成一种称为字节码的中间形式，然后将字节码存储在.pyc文件里面，当你下次再运行同样的程序时，机器会直接找到之前生成的.pyc文件进行加载。 ​ .pyc文件，是源代码经过编译后的一种中间表示形式。它无法双击直接运行，并且需要依赖特定的python环境（一个版本的python生成的pyc文件可能其他版本不能使用）所以它并不是可执行文件。它的存在仅仅是为了加快程序执行效率，避免重复编译。 这样就引来了一个问题——它不能像C一样自动生成一个可执行文件，如若要使用，则必须下载python环境并运行源代码，这样做非常依赖环境。 ​ 于是python提供了PyInstaller这个库，它可以将.py文件转为.exe文件，这样产生的.exe文件在没有Python环境时也可以直接使用。 ​ 一般的.py转成的.exe文件长这样:\n编辑\n我们可以用DIE打开看到为python语言写的\n编辑\n提取.pyc文件 ​ 第一步，将.exe转化成.pyc文件 ​ 使用工具pyinstxtractor.py提取.pyc文件 ​ 使用方法：在该pyinstxtractor.py文件所在目录打开终端，输入\n1 python pyinstxtractor.py [文件完整路径] ​ 这条指令的意思是用python解释器运行pyinstxtractor.py脚本，并把这个.exe文件作为参数传入。 ​ 输入完成后文件目录下会出现一个文件名_extracted文件夹\n编辑\n​ 打开这个文件夹，找到里面与.exe文件同名的.pyc文件\n编辑\npycdc反编译 ​ 上一步得到.pyc文件后，我们需要使用工具来查看源代码。 ​ 这里有两种方法，第一种是用pycdc反编译：将.pyc文件与pycdc放于同一个目录，打开终端，输入\n1 pycdas(.exe) [文件名] #括号内的部分可省略 ​ 这个指令就是把文件当参数传入，然后运行pycdc.exe，它就会把字节码反编译为源码。 ​ 但这个工具有时候不能反编译出所有的代码，这时我们就要用到另一种工具：pycdas\npycdas查看字节码 ​ 当pycdc反编译不完全时，就需要使用pycdas。 ​ .pyc文件是二进制文件，无法直接打开查看内容，而pycdas则可以帮助我们查看.pyc文件里面的字节码。 ​ 使用方法与pycdc相同：将.pyc文件与pycdas放于同一目录，然后打开终端，输入\n1 pycdas(.exe) [文件名] #括号内的部分可省略 ​ 相应工具以上传至文章顶部\n举个例子 将题目附件拖进DIE查壳，可发现为python可执行文件\n编辑\n在pyinstxtractor.py文件所在目录打开终端，输入\n1 python pyinstxtractor.py [文件完整路径] 提取.pyc文件，出现以下界面\n编辑\n在文件目录下出现test.exe_extracted文件夹\n编辑\n在这个文件夹里面找到与.exe文件同名的.pyc文件\n编辑\n将改.pyc文件与pycdc放于同一个目录，打开终端，输入\n1 pycdc test.exe 可以看到python源码\n编辑\n易知为base64解密，可以写脚本，也可以用工具\n编辑\n得到flag{Reverse_python}\n备注例题也以上传\n","date":"2025-02-27T22:16:38+08:00","permalink":"https://567liuhuaqing.github.io/p/rev/","title":"Rev"},{"content":"HelloBlog ","date":"2025-02-27T10:55:18+08:00","image":"https://567liuhuaqing.github.io/p/myfisrtblog/%E5%BA%93%E6%B4%9B%E7%B1%B3%E5%A0%86%E7%B3%96_hu_3fd1b0f24221433e.jpg","permalink":"https://567liuhuaqing.github.io/p/myfisrtblog/","title":"MyFisrtBlog"},{"content":"正文测试 而这些并不是完全重要，更加重要的问题是， 带着这些问题，我们来审视一下学生会退会。 既然如何， 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 我们不得不面对一个非常尴尬的事实，那就是， 可是，即使是这样，学生会退会的出现仍然代表了一定的意义。 学生会退会，发生了会如何，不发生又会如何。 经过上述讨论， 生活中，若学生会退会出现了，我们就不得不考虑它出现了的事实。 学生会退会，到底应该如何实现。 这样看来， 在这种困难的抉择下，本人思来想去，寝食难安。 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 就我个人来说，学生会退会对我的意义，不能不说非常重大。 莎士比亚曾经提到过，人的一生是短的，但如果卑劣地过这一生，就太长了。这似乎解答了我的疑惑。 莫扎特说过一句富有哲理的话，谁和我一样用功，谁就会和我一样成功。这启发了我， 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 学生会退会，到底应该如何实现。 一般来说， 从这个角度来看， 这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。 在这种困难的抉择下，本人思来想去，寝食难安。 了解清楚学生会退会到底是一种怎么样的存在，是解决一切问题的关键。 一般来说， 生活中，若学生会退会出现了，我们就不得不考虑它出现了的事实。 问题的关键究竟为何？ 而这些并不是完全重要，更加重要的问题是。\n奥斯特洛夫斯基曾经说过，共同的事业，共同的斗争，可以使人们产生忍受一切的力量。　带着这句话，我们还要更加慎重的审视这个问题： 一般来讲，我们都必须务必慎重的考虑考虑。 既然如此， 这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。 带着这些问题，我们来审视一下学生会退会。 我认为， 我认为， 在这种困难的抉择下，本人思来想去，寝食难安。 问题的关键究竟为何？ 每个人都不得不面对这些问题。 在面对这种问题时， 要想清楚，学生会退会，到底是一种怎么样的存在。 我认为， 既然如此， 每个人都不得不面对这些问题。 在面对这种问题时， 那么， 我认为， 学生会退会因何而发生。\n引用 思念是最暖的忧伤像一双翅膀\n让我停不了飞不远在过往游荡\n不告而别的你 就算为了我着想\n这么沉痛的呵护 我怎么能翱翔\n最暖的憂傷 - 田馥甄\n图片 1 2 3 ![Photo by Florian Klauer on Unsplash](florian-klauer-nptLmg6jqDo-unsplash.jpg) ![Photo by Luca Bravo on Unsplash](luca-bravo-alS7ewQ41M8-unsplash.jpg) ![Photo by Helena Hertz on Unsplash](helena-hertz-wWZzXlDpMog-unsplash.jpg) ![Photo by Hudai Gayiran on Unsplash](hudai-gayiran-3Od_VKcDEAA-unsplash.jpg) 相册语法来自 Typlog\n","date":"2020-09-09T00:00:00Z","image":"https://567liuhuaqing.github.io/p/test-chinese/helena-hertz-wWZzXlDpMog-unsplash_hu_2307260c751d0e0b.jpg","permalink":"https://567liuhuaqing.github.io/p/test-chinese/","title":"Chinese Test"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\nBlockquote with attribution Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\nTables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables Italics Bold Code italics bold code A B C D E F Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus ultricies, sapien non euismod aliquam, dui ligula tincidunt odio, at accumsan nulla sapien eget ex. Proin eleifend dictum ipsum, non euismod ipsum pulvinar et. Vivamus sollicitudin, quam in pulvinar aliquam, metus elit pretium purus Proin sit amet velit nec enim imperdiet vehicula. Ut bibendum vestibulum quam, eu egestas turpis gravida nec Sed scelerisque nec turpis vel viverra. Vivamus vitae pretium sapien Code Blocks Code block with backticks 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block with Hugo\u0026rsquo;s internal highlight shortcode 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Diff code block 1 2 3 4 5 [dependencies.bevy] git = \u0026#34;https://github.com/bevyengine/bevy\u0026#34; rev = \u0026#34;11f52b8c72fc3a568e8bb4a4cd1f3eb025ac2e13\u0026#34; - features = [\u0026#34;dynamic\u0026#34;] + features = [\u0026#34;jpeg\u0026#34;, \u0026#34;dynamic\u0026#34;] List Types Ordered List First item Second item Third item Unordered List List item Another item And another item Nested list Fruit Apple Orange Banana Dairy Milk Cheese Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL + ALT + Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nHyperlinked image The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"2019-03-11T00:00:00Z","image":"https://567liuhuaqing.github.io/p/markdown-syntax-guide/pawel-czerwinski-8uZPynIu-rQ-unsplash_hu_e95a4276bf860a84.jpg","permalink":"https://567liuhuaqing.github.io/p/markdown-syntax-guide/","title":"Markdown Syntax Guide"},{"content":"Lorem est tota propiore conpellat pectoribus de pectora summo.\nRedit teque digerit hominumque toris verebor lumina non cervice subde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc caluere tempus inhospita parcite confusaque translucet patri vestro qui optatis lumine cognoscere flos nubis! Fronde ipsamque patulos Dryopen deorum.\nExierant elisi ambit vivere dedere Duce pollice Eris modo Spargitque ferrea quos palude Rursus nulli murmur; hastile inridet ut ab gravi sententia! Nomine potitus silentia flumen, sustinet placuit petis in dilapsa erat sunt. Atria tractus malis.\nComas hunc haec pietate fetum procerum dixit Post torum vates letum Tiresia Flumen querellas Arcanaque montibus omnes Quidem et Vagus elidunt The Van de Graaf Canon\nMane refeci capiebant unda mulcebat Victa caducifer, malo vulnere contra dicere aurato, ludit regale, voca! Retorsit colit est profanae esse virescere furit nec; iaculi matertera et visa est, viribus. Divesque creatis, tecta novat collumque vulnus est, parvas. Faces illo pepulere tempus adest. Tendit flamma, ab opes virum sustinet, sidus sequendo urbis.\nIubar proles corpore raptos vero auctor imperium; sed et huic: manus caeli Lelegas tu lux. Verbis obstitit intus oblectamina fixis linguisque ausus sperare Echionides cornuaque tenent clausit possit. Omnia putatur. Praeteritae refert ausus; ferebant e primus lora nutat, vici quae mea ipse. Et iter nil spectatae vulnus haerentia iuste et exercebat, sui et.\nEurytus Hector, materna ipsumque ut Politen, nec, nate, ignari, vernum cohaesit sequitur. Vel mitis temploque vocatus, inque alis, oculos nomen non silvis corpore coniunx ne displicet illa. Crescunt non unus, vidit visa quantum inmiti flumina mortis facto sic: undique a alios vincula sunt iactata abdita! Suspenderat ego fuit tendit: luna, ante urbem Propoetides parte.\n","date":"2019-03-09T00:00:00Z","image":"https://567liuhuaqing.github.io/p/placeholder-text/matt-le-SJSpo9hQf7s-unsplash_hu_c1ca39d792aee4ab.jpg","permalink":"https://567liuhuaqing.github.io/p/placeholder-text/","title":"Placeholder Text"},{"content":"Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nIn this example we will be using KaTeX\nCreate a partial under /layouts/partials/math.html Within this partial reference the Auto-render Extension or host these scripts locally. Include the partial in your templates like so: 1 2 3 {{ if or .Params.math .Site.Params.math }} {{ partial \u0026#34;math.html\u0026#34; . }} {{ end }} To enable KaTeX globally set the parameter math to true in a project\u0026rsquo;s configuration To enable KaTeX on a per page basis include the parameter math: true in content files Note: Use the online reference of Supported TeX Functions\nExamples Inline math: $\\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887…$\n$$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$","date":"2019-03-08T00:00:00Z","permalink":"https://567liuhuaqing.github.io/p/math-typesetting/","title":"Math Typesetting"},{"content":"Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site\u0026rsquo;s configuration and then you can type emoji shorthand codes directly in content files; e.g.\n🙈 :see_no_evil: 🙉 :hear_no_evil: 🙊 :speak_no_evil:\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\nN.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n1 2 3 .emoji { font-family: Apple Color Emoji, Segoe UI Emoji, NotoColorEmoji, Segoe UI Symbol, Android Emoji, EmojiSymbols; } ","date":"2019-03-05T00:00:00Z","image":"https://567liuhuaqing.github.io/p/emoji-support/the-creative-exchange-d2zvqp3fpro-unsplash_hu_27b8954607cdb515.jpg","permalink":"https://567liuhuaqing.github.io/p/emoji-support/","title":"Emoji Support"}]